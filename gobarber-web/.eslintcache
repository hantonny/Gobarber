[{"/home/korrea/Gobarber/gobarber-web/src/styles/global.ts":"1","/home/korrea/Gobarber/gobarber-web/src/hooks/index.tsx":"2","/home/korrea/Gobarber/gobarber-web/src/components/Input/index.tsx":"3","/home/korrea/Gobarber/gobarber-web/src/components/Tooltip/styles.ts":"4","/home/korrea/Gobarber/gobarber-web/src/routes/Route.tsx":"5","/home/korrea/Gobarber/gobarber-web/src/pages/Dashboard/index.tsx":"6","/home/korrea/Gobarber/gobarber-web/src/pages/SignUp/styles.ts":"7","/home/korrea/Gobarber/gobarber-web/src/components/ToastContainer/Toast/index.tsx":"8","/home/korrea/Gobarber/gobarber-web/src/hooks/toast.tsx":"9"},{"size":461,"mtime":1615422214104,"results":"10","hashOfConfig":"11"},{"size":272,"mtime":1615422214104,"results":"12","hashOfConfig":"11"},{"size":1679,"mtime":1615422214104,"results":"13","hashOfConfig":"11"},{"size":762,"mtime":1615422214104,"results":"14","hashOfConfig":"11"},{"size":801,"mtime":1615422214104,"results":"15","hashOfConfig":"11"},{"size":109,"mtime":1615422214104,"results":"16","hashOfConfig":"11"},{"size":1532,"mtime":1615422214104,"results":"17","hashOfConfig":"11"},{"size":1175,"mtime":1615422214104,"results":"18","hashOfConfig":"11"},{"size":1438,"mtime":1615422214104,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1l16f0e",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/korrea/Gobarber/gobarber-web/src/styles/global.ts",[],["40","41","42","43","44"],"/home/korrea/Gobarber/gobarber-web/src/hooks/index.tsx",[],"/home/korrea/Gobarber/gobarber-web/src/components/Input/index.tsx",["45"],"/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable react/prop-types */\nimport React, {\n  InputHTMLAttributes,\n  useEffect,\n  useRef,\n  useState,\n  useCallback,\n} from 'react';\nimport { IconBaseProps } from 'react-icons';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { useField } from '@unform/core';\n\nimport Tooltip from '../Tooltip';\n\nimport { Container, Error } from './styles';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  icon: React.ComponentType<IconBaseProps>;\n}\n\nconst Input: React.FC<InputProps> = ({ name, icon: Icon, ...rest }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n\n    setIsFilled(!!inputRef.current?.value);\n  }, []);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n    });\n  }, [fieldName, registerField]);\n  return (\n    <Container isErrored={!!error} isFocused={isFocused} isFilled={isFilled}>\n      {Icon && <Icon size={20} />}\n      <input\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n        defaultValue={defaultValue}\n        ref={inputRef}\n        {...rest}\n      />\n      {error && (\n        <Error title={error}>\n          <FiAlertCircle color=\"#c53030\" size={20} />\n        </Error>\n      )}\n    </Container>\n  );\n};\n\nexport default Input;\n","/home/korrea/Gobarber/gobarber-web/src/components/Tooltip/styles.ts",[],"/home/korrea/Gobarber/gobarber-web/src/routes/Route.tsx",[],"/home/korrea/Gobarber/gobarber-web/src/pages/Dashboard/index.tsx",[],"/home/korrea/Gobarber/gobarber-web/src/pages/SignUp/styles.ts",[],"/home/korrea/Gobarber/gobarber-web/src/components/ToastContainer/Toast/index.tsx",[],"/home/korrea/Gobarber/gobarber-web/src/hooks/toast.tsx",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":14,"column":8,"nodeType":"58","messageId":"59","endLine":14,"endColumn":15},"lines-around-directive",["60"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'Tooltip' is defined but never used.","Identifier","unusedVar","padding-line-between-statements"]